##################################################################################
#         Configuration
##################################################################################
env:
  DEPLOYMENT_NAME: ${{vars.DEPLOYMENT_NAME}}
  APP_CODE_BRANCH: ${{vars.APP_CODE_BRANCH}}
  PARENT_DEPLOYMENT_REPO: ${{vars.PARENT_DEPLOYMENT_REPO}}
  PARENT_DEPLOYMENT_NAME: ${{vars.PARENT_DEPLOYMENT_NAME}}
  PARENT_DEPLOYMENT_BRANCH: ${{vars.PARENT_DEPLOYMENT_BRANCH}}
  DEPLOYMENT_PRIVATE_KEY: ${{secrets.DEPLOYMENT_PRIVATE_KEY}}
  FIREBASE_CONFIG: ${{secrets.FIREBASE_CONFIG}}  
  GDRIVE_CREDENTIALS: ${{ secrets.GDRIVE_CREDENTIALS }} 
  GDRIVE_TOKEN:  ${{ secrets.GDRIVE_TOKEN }}


  #GDRIVE_KEY: ${{ secrets.GDRIVE_PRIVATE }} 

##################################################################################
#         Main Code
##################################################################################
name: Sync Google Sheets Content 
on:
  workflow_dispatch:
    inputs:
      pr-title:
        description: Title for PR
        type: string
        default: sync content from google sheets
      pr-body:
        description: Description for PR
        type: string
        default: Automated PR creation from actions
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: initialize repository
        uses: actions/checkout@v3
        with: 
          fetch-depth: 0 

      - name: Check out app code
        uses: actions/checkout@v3
        with:
          repository: "IDEMSInternational/parenting-app-ui.git"
          ref: ${{env.APP_CODE_BRANCH}}

      - name: Remove .git from the repository in order to nest
        run: |
          rm -rf .git

      - name: Checkout parent repo if needed
        if: env.PARENT_DEPLOYMENT_REPO != ''
        uses: actions/checkout@v3
        with:
          path: ".idems_app/deployments/${{env.PARENT_DEPLOYMENT_NAME}}"
          repository: ${{env.PARENT_DEPLOYMENT_REPO}}
          ref: ${{env.PARENT_DEPLOYMENT_BRANCH}}

      - name: Checkout deployment
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          path: ".idems_app/deployments/${{env.DEPLOYMENT_NAME}}"

          
      - name: Populate Encryption key
        if: env.DEPLOYMENT_PRIVATE_KEY != ''
        run: echo "${{env.DEPLOYMENT_PRIVATE_KEY}}" > ./.idems_app/deployments/${{env.DEPLOYMENT_NAME}}/encrypted/private.key

        # TODO - populate firebase as part of deployment set
      - name: Populate Firebase Config
        if: env.FIREBASE_CONFIG != ''
        run: echo 'export const firebaseConfig = ${{env.FIREBASE_CONFIG}}' > src/environments/firebaseConfig.ts
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ./.yarn/cache
          # If cachebusting required (e.g. breaking yarn changes on update) change `v1` to another number
          key: ${{ runner.os }}-node-modules-yarn-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-yarn-v1-

      - name: Install node modules
        run: yarn install

      - name: Set deployment
        run: yarn workflow deployment set $DEPLOYMENT_NAME


  #    - name: Add private key
   #     run: |
  #        mkdir -p /home/runner/work/plh-facilitator-app-zm-content/plh-facilitator-app-zm-content/packages/scripts/config/
   #       echo ${{ secrets.GDRIVE_PRIVATE }} | base64 -d > /home/runner/work/plh-facilitator-app-zm-content/plh-facilitator-app-zm-content/packages/scripts/config/private.key


  #    - name: Add private key
  #      run: echo "${{env.GDRIVE_KEY}}" > ./packages/scripts/config/private.key
    #    run: | GDRIVE_KEY
    #      echo ${{ secrets.GDRIVE_PRIVATE }} | base64 -d > /home/runner/work/plh-facilitator-app-zm-content/plh-facilitator-app-zm-content/packages/scripts/config/private.key

   #   - name: Set deployment
    #    run: yarn workflow deployment encrypt
          
      - name: Add google credentials
        run: |
          echo "${{env.GDRIVE_CREDENTIALS}}" > ./packages/scripts/config/credentials.json
    
      - name: Add google token
        run: |
          echo "${{env.GDRIVE_TOKEN}}" > ./packages/scripts/config/token.json
    

        

      - name: Sync content
        run: yarn workflow sync
      
      - name: Commit changes
        working-directory: .idems_app/deployments/${{env.DEPLOYMENT_NAME}}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"        
          git add .  # This adds all changes to the staging area
          git diff --quiet && git diff --staged --quiet || git commit -m "Automated commit message" # Only commit if there are changes
#  git checkout -b automated-changes


      - name: Create Pull Request
      # You may pin to the exact commit or the version.
      # uses: peter-evans/create-pull-request@153407881ec5c347639a548ade7d8ad1d6740e38
        uses: peter-evans/create-pull-request@v5.0.2
        with:
          token: ${{ secrets.PAT }}
    # Relative path under $GITHUB_WORKSPACE to the repository. Defaults to $GITHUB_WORKSPACE.
          path: .idems_app/deployments/${{env.DEPLOYMENT_NAME}}             
          # The title of the pull request.
          title: ${{ inputs.pr-title }}
          # The body of the pull request.
          body: ${{ inputs.pr-body }}

    # The message to use when committing changes.
  #  commit-message: # optional, default is [create-pull-request] automated change
    # The committer name and email address in the format `Display Name <email@address.com>`. Defaults to the GitHub Actions bot user.
 #    push-to-fork: # optional

   
    # The pull request branch name.
#    branch: # optional, default is create-pull-request/patch
    # Delete the `branch` when closing pull requests, and when undeleted after merging. Recommend `true`.



#    base: # optional
    # A fork of the checked out parent repository to which the pull request branch will be pushed. e.g. `owner/repo-fork`. The pull request will be created to merge the fork's branch into the parent's base.



  #  labels: # optional
  








      
  #    - name: Install GitHub CLI
  #      run: |
  #        sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
  #        sudo apt-add-repository https://cli.github.com/packages
  #        sudo apt update
  #        sudo apt install gh
      
  #    - name: Create Pull Request using GitHub CLI
  #      env:
  #        GH_TOKEN: ${{ secrets.PAT }}
  #      run: |
  #        cd .idems_app/deployments/${{env.DEPLOYMENT_NAME}}
  #        git push origin automated-changes
  #        echo $GH_TOKEN | gh auth login --with-token
  #        gh pr create --base main --head automated-changes --title ${{ inputs.pr-title }} --body ${{ inputs.pr-body }}



    #  - name: Create PR
     #   uses: repo-sync/pull-request@v2
     #   with:
     #     source_branch: "automated-changes"
     #     destination_branch: "main"
     #     pr_title: ${{ inputs.pr-title }}
     #     pr_body: ${{ inputs.pr-body }}
     #     github_token: ${{ secrets.PAT }}
